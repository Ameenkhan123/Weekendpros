<div style="background-color: #212529;">
  <div id="relative" style="background-image: url('<%= asset_path 'denys-nevozhai-100695-unsplash'%>');"></div>
</div>
<div id="absolute">
	<h3 class="text-center" id="h3">Find the Best Professions at<br> Weekend Pros</h3>
	<%= search_form_for @q do |f| %>
	<div class="input-group left">
		<div class="input-group-btn search-panel" >
			<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown"  id="button_left"> <span id="search_concept">Skill</span>  <span class="caret"></span>
			</button>
			<ul class="dropdown-menu" role="menu">
				<li class="dropdown-item"><a href="#id"><i class="fa fa-angle-double-right" id="double_right" style="" ></i> <span>Teacher</span></a>
				</li>
				<li class="dropdown-item"><a href="#name"><i class="fa fa-angle-double-right" id="double_right"></i> Trainer</a>
				</li>
				<li class="dropdown-item"><a href="#description"><i class="fa fa-angle-double-right" id="double_right"></i> Web Developer</a>
				</li>
				<li class="dropdown-item"><a href="#description"><i class="fa fa-angle-double-right" id="double_right"></i> Web Designer</a>
				</li>
			</ul>
		</div>
		<%= f.search_field :name_cont, class: "form-control", name: "q", placeholder: "Search..",
		id: "search_key", id: "autocomplete", placeholder: "Enter your address", 
		onFocus: "geolocate()" %> 
		<span class="input-group-btn">
			<button class="btn btn-info" type="submit" id="search_key"><i class="fa fa-search" aria-hidden="true"></i>&#xA0;&#xA0;Search&#xA0;&#xA0;</button>
			<%#= f.submit %>
		</span>
	</div>
	<%end%>
</div>
<div class="container">
	<div class="row" id="round_skills">
		<div class="col-sm-4">
			<div class="round-button">
				<div class="round-button-circle">
					<a href="#" class="round-button a "><span id="bold">200<br>+</span>
					</a>
				</div>
			</div>
			<div id="skills" style="">Skills</div>
		</div>
		<div class="col-sm-4">
			<div class="round-button">
				<div class="round-button-circle">
					<a href="#" class="round-button a"><span id="bold">2000<br>+</span>
					</a>
				</div>
			</div>
			<div id="professionals" style="">Professionals</div>
		</div>
		<div class="col-sm-4">
			<div class="round-button">
				<div class="round-button-circle">
					<a href="#" class="round-button a"><span id="bold">29000<br> +</span>
					</a>
				</div>
			</div>
			<div id="satisfied" style="">Satisfied User</div>
		</div>
	</div>
	<hr>
	<span class="text-center">
		<h4>Want to Earn in Weekend?</h4>
		<h4>Don't Daley? <i>Join is Today.</i></h4>
	</span>
	<%= link_to 'Sign Up', new_user_registration_path, id: 'sign_up', class: 'btn btn-info' %>
	<hr>

	<div class="row">
		<div class="col-sm-3">
			<div class="card"  id="card">
				<div class="card-body">
					<p class="card-text-top" >This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
					<button class="btn btn-info btn-block">click</button>
				</div>
			</div>
		</div>
		<div class="col-sm-3">
			<div class="card" id="card">
				<div class="card-body">
					<p class="card-text-top" >This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
					<button class="btn btn-info btn-block">click</button>
				</div>
			</div>
		</div>
		<div class="col-sm-3">
			<div class="card" id="card">
				<div class="card-body">
					<p class="card-text-top" >This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
					<button class="btn btn-info btn-block">click</button>
				</div>
			</div>
		</div>
		<div class="col-sm-3">
			<div class="card" id="card">
				<div class="card-body">
					<p class="card-text-top" >This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
					<button class="btn btn-info btn-block">click</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var placeSearch, autocomplete;
	var componentForm = {
		street_number: 'short_name',
		route: 'long_name',
		locality: 'long_name',
		administrative_area_level_1: 'short_name',
		country: 'long_name',
		postal_code: 'short_name'
	};
	function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
        	/** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        	{types: ['geocode']});
        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }
      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();
        for (var component in componentForm) {
        	document.getElementById(component).value = '';
        	document.getElementById(component).disabled = false;
        }
        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
        	var addressType = place.address_components[i].types[0];
        	if (componentForm[addressType]) {
        		var val = place.address_components[i][componentForm[addressType]];
        		document.getElementById(addressType).value = val;
        	}
        }
      }
      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
      	if (navigator.geolocation) {
      		navigator.geolocation.getCurrentPosition(function(position) {
      			var geolocation = {
      				lat: position.coords.latitude,
      				lng: position.coords.longitude
      			};
      			var circle = new google.maps.Circle({
      				center: geolocation,
      				radius: position.coords.accuracy
      			});
      			autocomplete.setBounds(circle.getBounds());
      		});
      	}
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAe3cVDass_szYzN85nUnk9ZkPmhpBazNI&libraries=places&callback=initAutocomplete"
    async defer></script>